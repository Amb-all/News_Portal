import subprocess
import os

def run_cmd(cmd):
    result = subprocess.run(cmd, shell=True, capture_output=True, text=True)
    return result

def git_push(branch: str, remote_url: str, commit_message: str = "Initial commit"):
    print(f"\nüöÄ –ü—É—à–∏–º –≤ –≤–µ—Ç–∫—É '{branch}'...")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞: –Ω–µ—Ç –ª–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ –∏–º—ë–Ω –∏–∑-–∑–∞ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–µ—Ç–æ–∫
    if "/" in branch:
        parts = branch.split("/")
        parent_branch = parts[0]
        check_parent = run_cmd(f"git show-ref --verify --quiet refs/heads/{parent_branch}")
        if check_parent.returncode == 0:
            print(f"‚ùå –û—à–∏–±–∫–∞: –≤–µ—Ç–∫–∞ '{parent_branch}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!'{branch}'.")
            print("üí° –ü–µ—Ä–µ–∏–º–µ–Ω—É–π—Ç–µ –≤–µ—Ç–∫—É, –Ω–∞–ø—Ä–∏–º–µ—Ä: 'feature_news_pages' –∏–ª–∏ —É–¥–∞–ª–∏—Ç–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—â—É—é.")
            return

    # –ü—Ä–∏–≤—è–∑–∫–∞ –∫ —É–¥–∞–ª—ë–Ω–Ω–æ–º—É —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—é
    subprocess.run(f"git remote add origin {remote_url}", shell=True)

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤
    subprocess.run("git add .", shell=True)

    # –ö–æ–º–º–∏—Ç
    subprocess.run(f'git commit -m "{commit_message}"', shell=True)

    # –°–æ–∑–¥–∞–Ω–∏–µ –∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –Ω–æ–≤—É—é –≤–µ—Ç–∫—É
    subprocess.run(f"git checkout -b {branch}", shell=True)

    # Push –≤ —É–¥–∞–ª—ë–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
    subprocess.run(f"git push -u origin {branch}", shell=True)

    print("‚úÖ –ì–æ—Ç–æ–≤–æ.")

# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
if __name__ == "__main__":
    remote = input("üîó –í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä https://github.com/user/repo.git): ").strip()
    branch = input("üåø –í–≤–µ–¥–∏—Ç–µ –∏–º—è –Ω–æ–≤–æ–π –≤–µ—Ç–∫–∏: ").strip()
    message = input("üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∫–æ–º–º–∏—Ç—É [–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: Initial commit]: ").strip() or "Initial commit"

    git_push(branch, remote, message)


if __name__ == "__main__":
    main()
